<?php

/**
 * Classes that describe a shipment transaction using XML
 * data sources.
 * 
 * PHP versions 5.
 * 
 * @category   Services
 * @package    Services_Shipping
 * @subpackage XML
 * @author     Kristopher Ives <nullmind@gmail.com>
 * @copyright  2008 Santiance Corporation
 * @license    BSD http://www.santiance.com/open/Services_Shipping/license.txt
 * @version    CVS: $Id:$
 * @link       http://www.santiance.com/open/Services_Shipping
 */

require_once 'Services/Shipping/XML/Source.php';
require_once 'Services/Shipping/ShipmentReceipt.php';

/**
 * A ShipmentReceipt that uses an XML data source.
 * 
 * @category   Services
 * @package    Services_Shipping
 * @subpackage XML
 * @author     Kristopher Ives <nullmind@gmail.com>
 * @license    BSD http://www.santiance.com/open/Services_Shipping/license.txt
 * @link       http://www.santiance.com/open/Services_Shipping/ShipmentReceipt
 */
abstract class Services_Shipping_XML_ShipmentReceipt
    extends    Services_Shipping_XML_Source
    implements Services_Shipping_ShipmentReceipt
{
    /**
     * Constructs this ShipmentReceipt as an XML data source.
     *
     * @param DOMNode $node the XML node to wrap
     * @param array   $map  the XPath mappings for the node
     */
    public function __construct(DOMNode $node, array $map)
    {
        parent::__construct($node, $map);
    }
    
    /**
     * Creates a ShipmentLabel from an XPath expression result.
     *
     * @param mixed $value the result of an XPath expression for
     *        a field that is supposed to be a ShipmentLabel
     * 
     * @return Services_Shipping_ShipmentLabel the label object
     */
    protected abstract function createLabel($value);
    
    /**
     * Creates a ShipmentEstimate object from an XPath expression
     * result.
     *
     * @param mixed $value the result of an XPath expression for
     *        a field that expects a ShipmentEstimate object.
     * 
     * @return Services_Shipping_ShipmentEstimate the estimate object
     */
    protected abstract function createEstimate($value);
    
    /**
     * Gets the tracking identifier of the Shipment this receipt
     * is for. This should be similar to
     * {@link Services_Shipping_Carrier#track()}.
     *
     * @return string the tracking identifier.
     */
    public function getTrackingId()
    {
        return $this->get('TrackingId');
    }
    
    /**
     * Gets the label generated by this Shipment. If no label was generated,
     * or it's no longer available null is returned.
     *
     * @return Services_Shipping_ShipmentLabel|null the label object
     */
    public function getLabel()
    {
        $value = $this->get('Label', $hinted);
        
        if ($hinted) {
            return $value;
        }
        
        return $this->createLabel($value);
    }
    
    /**
     * Gets the estimate of the transaction that produced this
     * receipt. If no such estimate exists null is returned.
     *
     * @return Services_Shipping_ShipmentEstimate|null the estimate object
     */
    public function getEstimate()
    {
        $value = $this->get('Estimate', $hinted);
        
        if ($hinted) {
            return $value;
        }
        
        return $this->createEstimate($value);
    }
}
?>